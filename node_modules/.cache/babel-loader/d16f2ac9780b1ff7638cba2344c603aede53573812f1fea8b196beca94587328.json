{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Desktop/bot-battrl/bot/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport BotSpecs from './BotSpecs';\nimport BotsPage from \"./BotsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [allBots, setAllBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8001/bots').then(response => {\n      setAllBots(response.data);\n    }).catch(error => {\n      console.error('Error fetching bot data:', error);\n    });\n  }, []);\n  const enlistBot = bot => {\n    if (!enlistedBots.some(enlistedBot => enlistedBot.id === bot.id)) {\n      setEnlistedBots(prevEnlistedBots => [...prevEnlistedBots, bot]);\n    }\n  };\n  const releaseBot = bot => {\n    setEnlistedBots(prevEnlistedBots => prevEnlistedBots.filter(enlistedBot => enlistedBot.id !== bot.id));\n  };\n  const deleteBotForever = bot => {\n    axios.delete(`http://localhost:8001/bots/${bot.id}`).then(() => {\n      setAllBots(prevAllBots => prevAllBots.filter(b => b.id !== bot.id));\n      releaseBot(bot);\n    }).catch(error => {\n      console.error('Error deleting bot:', error);\n    });\n  };\n  const handleBotSelect = bot => {\n    setSelectedBot(bot);\n  };\n  const goBackToListView = () => {\n    setSelectedBot(null);\n  };\n  const handleFilterChange = selectedFilters => {\n    setFilters(selectedFilters);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedBot ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      goBackToListView: goBackToListView,\n      enlistBot: enlistBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(BotCollection, {\n        bots: allBots,\n        enlistedBots: enlistedBots,\n        filters: filters,\n        onBotSelect: handleBotSelect,\n        onEnlist: enlistBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n        enlistedBots: enlistedBots,\n        onRelease: releaseBot,\n        onDelete: deleteBotForever\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rEJj6Tfn+UBdqirvzuUeh2sEr4g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BotCollection","YourBotArmy","BotSpecs","BotsPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","allBots","setAllBots","enlistedBots","setEnlistedBots","selectedBot","setSelectedBot","filters","setFilters","get","then","response","data","catch","error","console","enlistBot","bot","some","enlistedBot","id","prevEnlistedBots","releaseBot","filter","deleteBotForever","delete","prevAllBots","b","handleBotSelect","goBackToListView","handleFilterChange","selectedFilters","children","fileName","_jsxFileName","lineNumber","columnNumber","bots","onBotSelect","onEnlist","onRelease","onDelete","_c","$RefreshReg$"],"sources":["/home/moringa/Desktop/bot-battrl/bot/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport BotSpecs from './BotSpecs';\nimport BotsPage from \"./BotsPage\";\n\nconst App = () => {\n  const [allBots, setAllBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [filters, setFilters] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:8001/bots')\n      .then((response) => {\n        setAllBots(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching bot data:', error);\n      });\n  }, []);\n\n  const enlistBot = (bot) => {\n    if (!enlistedBots.some((enlistedBot) => enlistedBot.id === bot.id)) {\n      setEnlistedBots((prevEnlistedBots) => [...prevEnlistedBots, bot]);\n    }\n  };\n\n  const releaseBot = (bot) => {\n    setEnlistedBots((prevEnlistedBots) =>\n      prevEnlistedBots.filter((enlistedBot) => enlistedBot.id !== bot.id)\n    );\n  };\n\n  const deleteBotForever = (bot) => {\n    axios.delete(`http://localhost:8001/bots/${bot.id}`)\n      .then(() => {\n        setAllBots((prevAllBots) => prevAllBots.filter((b) => b.id !== bot.id));\n        releaseBot(bot);\n      })\n      .catch((error) => {\n        console.error('Error deleting bot:', error);\n      });\n  };\n\n  const handleBotSelect = (bot) => {\n    setSelectedBot(bot);\n  };\n\n  const goBackToListView = () => {\n    setSelectedBot(null);\n  };\n\n  const handleFilterChange = (selectedFilters) => {\n    setFilters(selectedFilters);\n  };\n\n  return (\n    <div>\n      {selectedBot ? (\n        <BotSpecs bot={selectedBot} goBackToListView={goBackToListView} enlistBot={enlistBot} />\n      ) : (\n        <>\n          {/* SortBar components have been removed */}\n          <BotCollection\n            bots={allBots}\n            enlistedBots={enlistedBots}\n            filters={filters}\n            onBotSelect={handleBotSelect}\n            onEnlist={enlistBot}\n          />\n          <YourBotArmy\n            enlistedBots={enlistedBots}\n            onRelease={releaseBot}\n            onDelete={deleteBotForever}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}