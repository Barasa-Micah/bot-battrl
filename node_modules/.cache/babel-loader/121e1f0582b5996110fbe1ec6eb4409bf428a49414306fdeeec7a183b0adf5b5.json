{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nconst App = () => {\n  _s();\n  const [botData, setBotData] = useState([]);\n};\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import BotCollection from './BotCollection';\n// import YourBotArmy from './YourBotArmy';\n// import BotSpecs from './BotSpecs';\n// import BotsPage from \"./BotsPage\";\n\n// const App = () => {\n//   const [allBots, setAllBots] = useState([]);\n//   const [enlistedBots, setEnlistedBots] = useState([]);\n//   const [selectedBot, setSelectedBot] = useState(null);\n//   const [filters, setFilters] = useState([]);\n\n//   useEffect(() => {\n//     axios.get('http://localhost:8001/bots')\n//       .then((response) => {\n//         setAllBots(response.data);\n//       })\n//       .catch((error) => {\n//         console.error('Error fetching bot data:', error);\n//       });\n//   }, []);\n\n//   const enlistBot = (bot) => {\n//     if (!enlistedBots.some((enlistedBot) => enlistedBot.id === bot.id)) {\n//       setEnlistedBots((prevEnlistedBots) => [...prevEnlistedBots, bot]);\n//     }\n//   };\n\n//   const releaseBot = (bot) => {\n//     setEnlistedBots((prevEnlistedBots) =>\n//       prevEnlistedBots.filter((enlistedBot) => enlistedBot.id !== bot.id)\n//     );\n//   };\n\n//   const deleteBotForever = (bot) => {\n//     axios.delete(`http://localhost:8001/bots/${bot.id}`)\n//       .then(() => {\n//         setAllBots((prevAllBots) => prevAllBots.filter((b) => b.id !== bot.id));\n//         releaseBot(bot);\n//       })\n//       .catch((error) => {\n//         console.error('Error deleting bot:', error);\n//       });\n//   };\n\n//   const handleBotSelect = (bot) => {\n//     setSelectedBot(bot);\n//   };\n\n//   const goBackToListView = () => {\n//     setSelectedBot(null);\n//   };\n\n//   const handleFilterChange = (selectedFilters) => {\n//     setFilters(selectedFilters);\n//   };\n\n//   return (\n//     <div>\n//       {selectedBot ? (\n//         <BotSpecs bot={selectedBot} goBackToListView={goBackToListView} enlistBot={enlistBot} />\n//       ) : (\n//         <>\n//           <BotCollection\n//             bots={allBots}\n//             enlistedBots={enlistedBots}\n//             filters={filters}\n//             onBotSelect={handleBotSelect}\n//             onEnlist={enlistBot}\n//           />\n//           <YourBotArmy\n//             enlistedBots={enlistedBots}\n//             onRelease={releaseBot}\n//             onDelete={deleteBotForever}\n//           />\n//           <BotsPage />\n//         </>\n//       )\n//       }\n//     </div >\n//   );\n// };\n\n// export default App;\n_s(App, \"kqFJzUmR2pYsDcNHCkL9369ZJlo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","_s","botData","setBotData","_c","$RefreshReg$"],"sources":["/home/moringa/Desktop/bot-battrl/bot/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst App = () => {\n  const[botData, setBotData] = useState([])\n}\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import BotCollection from './BotCollection';\n// import YourBotArmy from './YourBotArmy';\n// import BotSpecs from './BotSpecs';\n// import BotsPage from \"./BotsPage\";\n\n// const App = () => {\n//   const [allBots, setAllBots] = useState([]);\n//   const [enlistedBots, setEnlistedBots] = useState([]);\n//   const [selectedBot, setSelectedBot] = useState(null);\n//   const [filters, setFilters] = useState([]);\n\n//   useEffect(() => {\n//     axios.get('http://localhost:8001/bots')\n//       .then((response) => {\n//         setAllBots(response.data);\n//       })\n//       .catch((error) => {\n//         console.error('Error fetching bot data:', error);\n//       });\n//   }, []);\n\n//   const enlistBot = (bot) => {\n//     if (!enlistedBots.some((enlistedBot) => enlistedBot.id === bot.id)) {\n//       setEnlistedBots((prevEnlistedBots) => [...prevEnlistedBots, bot]);\n//     }\n//   };\n\n//   const releaseBot = (bot) => {\n//     setEnlistedBots((prevEnlistedBots) =>\n//       prevEnlistedBots.filter((enlistedBot) => enlistedBot.id !== bot.id)\n//     );\n//   };\n\n//   const deleteBotForever = (bot) => {\n//     axios.delete(`http://localhost:8001/bots/${bot.id}`)\n//       .then(() => {\n//         setAllBots((prevAllBots) => prevAllBots.filter((b) => b.id !== bot.id));\n//         releaseBot(bot);\n//       })\n//       .catch((error) => {\n//         console.error('Error deleting bot:', error);\n//       });\n//   };\n\n//   const handleBotSelect = (bot) => {\n//     setSelectedBot(bot);\n//   };\n\n//   const goBackToListView = () => {\n//     setSelectedBot(null);\n//   };\n\n//   const handleFilterChange = (selectedFilters) => {\n//     setFilters(selectedFilters);\n//   };\n\n//   return (\n//     <div>\n//       {selectedBot ? (\n//         <BotSpecs bot={selectedBot} goBackToListView={goBackToListView} enlistBot={enlistBot} />\n//       ) : (\n//         <>\n//           <BotCollection\n//             bots={allBots}\n//             enlistedBots={enlistedBots}\n//             filters={filters}\n//             onBotSelect={handleBotSelect}\n//             onEnlist={enlistBot}\n//           />\n//           <YourBotArmy\n//             enlistedBots={enlistedBots}\n//             onRelease={releaseBot}\n//             onDelete={deleteBotForever}\n//           />\n//           <BotsPage />\n//         </>\n//       )\n//       }\n//     </div >\n//   );\n// };\n\n// export default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAAG,EAAA,CAxFMD,GAAG;AAAAI,EAAA,GAAHJ,GAAG;AAAA,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}