{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Desktop/bot-battrl/bot/src/components/BotsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsPage() {\n  _s();\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/bots\") // Removed spaces from the fetch URL\n    .then(res => res.json()).then(data => setBots(data));\n  }, []);\n  const updateBot = id => {\n    setBots(prevBots => prevBots.map(bot => id === bot.id ? {\n      ...bot,\n      isAdded: true\n    } : bot));\n  };\n  const removeBot = id => {\n    setBots(prevBots => prevBots.map(bot => id === bot.id ? {\n      ...bot,\n      isAdded: false\n    } : bot));\n  };\n  const deleteBot = id => {\n    fetch(`http://localhost:3000/bots/${id}`, {\n      method: \"DELETE\"\n    }).then(() => setBots(previousData => previousData.filter(bot => bot.id !== id)));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bot Battlr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: bots.filter(bot => bot.isAdded),\n      handleClick: removeBot,\n      handleDelete: deleteBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      handleClick: updateBot,\n      handleDelete: deleteBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useEffect","useState","YourBotArmy","BotCollection","jsxDEV","_jsxDEV","BotsPage","_s","bots","setBots","fetch","then","res","json","data","updateBot","id","prevBots","map","bot","isAdded","removeBot","deleteBot","method","previousData","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","handleDelete","_c","$RefreshReg$"],"sources":["/home/moringa/Desktop/bot-battrl/bot/src/components/BotsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  const [bots, setBots] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/bots\") // Removed spaces from the fetch URL\n      .then((res) => res.json())\n      .then((data) => setBots(data));\n  }, []);\n\n  const updateBot = (id) => {\n    setBots((prevBots) =>\n      prevBots.map((bot) => (id === bot.id ? { ...bot, isAdded: true } : bot))\n    );\n  };\n\n  const removeBot = (id) => {\n    setBots((prevBots) =>\n      prevBots.map((bot) => (id === bot.id ? { ...bot, isAdded: false } : bot))\n    );\n  };\n\n  const deleteBot = (id) => {\n    fetch(`http://localhost:3000/bots/${id}`, {\n      method: \"DELETE\",\n    }).then(() =>\n      setBots((previousData) => previousData.filter((bot) => bot.id !== id))\n    );\n  };\n\n  return (\n    <div>\n      <h1>Bot Battlr</h1>\n      <YourBotArmy\n        bots={bots.filter((bot) => bot.isAdded)}\n        handleClick={removeBot}\n        handleDelete={deleteBot}\n      />\n      <BotCollection bots={bots} handleClick={updateBot} handleDelete={deleteBot} />\n    </div>\n  );\n}\n\nexport default BotsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,4BAA4B,CAAC,CAAC;IAAA,CACjCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,OAAO,CAACK,IAAI,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAIC,EAAE,IAAK;IACxBP,OAAO,CAAEQ,QAAQ,IACfA,QAAQ,CAACC,GAAG,CAAEC,GAAG,IAAMH,EAAE,KAAKG,GAAG,CAACH,EAAE,GAAG;MAAE,GAAGG,GAAG;MAAEC,OAAO,EAAE;IAAK,CAAC,GAAGD,GAAI,CACzE,CAAC;EACH,CAAC;EAED,MAAME,SAAS,GAAIL,EAAE,IAAK;IACxBP,OAAO,CAAEQ,QAAQ,IACfA,QAAQ,CAACC,GAAG,CAAEC,GAAG,IAAMH,EAAE,KAAKG,GAAG,CAACH,EAAE,GAAG;MAAE,GAAGG,GAAG;MAAEC,OAAO,EAAE;IAAM,CAAC,GAAGD,GAAI,CAC1E,CAAC;EACH,CAAC;EAED,MAAMG,SAAS,GAAIN,EAAE,IAAK;IACxBN,KAAK,CAAE,8BAA6BM,EAAG,EAAC,EAAE;MACxCO,MAAM,EAAE;IACV,CAAC,CAAC,CAACZ,IAAI,CAAC,MACNF,OAAO,CAAEe,YAAY,IAAKA,YAAY,CAACC,MAAM,CAAEN,GAAG,IAAKA,GAAG,CAACH,EAAE,KAAKA,EAAE,CAAC,CACvE,CAAC;EACH,CAAC;EAED,oBACEX,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBzB,OAAA,CAACH,WAAW;MACVM,IAAI,EAAEA,IAAI,CAACiB,MAAM,CAAEN,GAAG,IAAKA,GAAG,CAACC,OAAO,CAAE;MACxCW,WAAW,EAAEV,SAAU;MACvBW,YAAY,EAAEV;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFzB,OAAA,CAACF,aAAa;MAACK,IAAI,EAAEA,IAAK;MAACuB,WAAW,EAAEhB,SAAU;MAACiB,YAAY,EAAEV;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEV;AAACvB,EAAA,CAxCQD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA0CjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}